name: Deploy Backend

on:
  push:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - 'database/**'
      - '.github/workflows/deploy-backend.yml'

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: banana_sales_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Setup test database
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d banana_sales_test -f database/schema.sql
        env:
          PGPASSWORD: postgres

      - name: Run tests (if available)
        run: |
          cd backend
          npm test || echo "No tests found, skipping..."

  # Uncomment and configure for your deployment platform
  
  # Deploy to Railway
  # deploy-railway:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     
  #     - name: Deploy to Railway
  #       uses: railway-app/railway-deploy@v1
  #       with:
  #         railway-token: ${{ secrets.RAILWAY_TOKEN }}
  #         service: banana-sales-backend

  # Deploy to Heroku
  # deploy-heroku:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     
  #     - name: Deploy to Heroku
  #       uses: akhileshns/heroku-deploy@v3.12.14
  #       with:
  #         heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #         heroku_app_name: "your-banana-sales-app"
  #         heroku_email: "your-email@example.com"
  #         appdir: "backend"

  # Build and push Docker image
  # docker-build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     
  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./backend
  #         push: true
  #         tags: your-username/banana-sales-backend:latest